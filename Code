// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

/**
 * @title Mandate-Based Smart Escrow Contract
 * @author [...]
 * @notice This contract holds funds between a buyer and a seller, with a mandate acting as a mediator.
 */
contract Escrow {
    address public buyer;
    address public seller;
    address public mandate;
    bool public taskCompleted;

    constructor(address _seller, address _mandate) payable {
        buyer = msg.sender;
        seller = _seller;
        mandate = _mandate;
    }

    function markTaskComplete() public {
        require(msg.sender == seller, "Only seller can mark task complete");
        taskCompleted = true;
    }

    function releaseFunds() public {
        require(msg.sender == mandate, "Only mandate can release funds");
        require(taskCompleted, "Task must be marked complete");
        payable(seller).transfer(address(this).balance);
    }

    function refund() public {
        require(msg.sender == mandate, "Only mandate can refund");
        require(!taskCompleted, "Task already completed");
        payable(buyer).transfer(address(this).balance);
    }
}
